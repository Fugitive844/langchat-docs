import{_ as s,c as i,o as n,ag as e}from"./chunks/framework.ByciF0Oj.js";const t="/open-langchat.png",l="/mysql.png",p="/project.png",o="/run.png",c="/langchat-ui.png",h="/env-client.png",b=JSON.parse('{"title":"本地启动项目","description":"","frontmatter":{},"headers":[],"relativePath":"langchat/docs/run/getting-started.md","filePath":"langchat/docs/run/getting-started.md","lastUpdated":1738637454000}'),d={name:"langchat/docs/run/getting-started.md"};function r(g,a,k,u,F,m){return n(),i("div",null,a[0]||(a[0]=[e('<h1 id="本地启动项目" tabindex="-1">本地启动项目 <a class="header-anchor" href="#本地启动项目" aria-label="Permalink to &quot;本地启动项目&quot;">​</a></h1><p>在启动项目之前，你需要已经准备好了<strong>开发环境</strong>。这里作者使用最新版本的IDEA演示如何本地启动项目</p><h3 id="clone-open" tabindex="-1">Clone &amp; Open <a class="header-anchor" href="#clone-open" aria-label="Permalink to &quot;Clone &amp; Open&quot;">​</a></h3><p>首先把整个项目代码下载到本地：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/tycoding/langchat.git</span></span></code></pre></div><p>使用IDEA打开整个<code>langchat</code>项目文件夹：</p><p><img src="'+t+`" alt="" loading="lazy"></p><h3 id="下载依赖" tabindex="-1">下载依赖 <a class="header-anchor" href="#下载依赖" aria-label="Permalink to &quot;下载依赖&quot;">​</a></h3><p><strong>前端</strong></p><p>主要包含 <code>langchat-ui</code> 和 <code>langchat-ui-client</code> 两个模块，需要用<code>pnpm</code>下载依赖</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langchat-ui</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langchat-ui-client</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p><strong>后端</strong></p><p>IDEA打开后会自动加载Maven依赖，除了上面两个<code>ui</code>模块，其余模块都是后端的。</p><h3 id="环境配置" tabindex="-1">环境配置 <a class="header-anchor" href="#环境配置" aria-label="Permalink to &quot;环境配置&quot;">​</a></h3><p>Clone下来的代码，首先你需要修改后端SpringBoot项目的配置文件才能运行。</p><h4 id="导入sql" tabindex="-1">导入sql <a class="header-anchor" href="#导入sql" aria-label="Permalink to &quot;导入sql&quot;">​</a></h4><p>你需要再MySQL8下创建一个名为<code>langchat</code>的数据库，然后在项目根目录找到<code>langchat.sql</code>脚本并导入表结构</p><p><img src="`+l+'" alt="" loading="lazy"></p><h4 id="修改application-yml" tabindex="-1">修改application.yml <a class="header-anchor" href="#修改application-yml" aria-label="Permalink to &quot;修改application.yml&quot;">​</a></h4><p>注意，<code>application.yml</code>中默认配置<code>local</code>环境，你可以在本地创建<code>application-local.yml</code>文件，当然也可以修改为<code>dev</code>环境使用<code>application-dev.yml</code>中的配置。</p><p><img src="'+p+'" alt="" loading="lazy"></p><p><code>application-dev.yml</code>包含了最基础的环境配置要求：</p><ol><li>正常启动项目，必须配置好<code>mysql</code>、<code>redis</code>信息</li><li><code>langchat.auth</code>定义了后台管理系统<strong>超级管理员</strong>账号的登录信息，<code>is-demo-dev</code>为是否开启演示环境</li><li><code>langchat.vectorstore</code>定义了LLM向量库的信息，目前LangChat采用<code>PgVector</code>向量数据库</li><li><code>langchat.web-search.google</code>定义了谷歌搜索功能的key信息，这个看情况配置</li></ol><p>另外：因为LLM大模型的配置是在前端动态配置的，因此不需要在配置文件中定义了，但是考虑到向量库一般不能轻易改变，因此vectorStore的配置仍放在配置文件中</p><h3 id="启动后端项目" tabindex="-1">启动后端项目 <a class="header-anchor" href="#启动后端项目" aria-label="Permalink to &quot;启动后端项目&quot;">​</a></h3><p>后端运行<code>LangChatApp.java</code>的main函数启动：</p><p><img src="'+o+`" alt="" loading="lazy"></p><h3 id="启动langchat-ui前端" tabindex="-1">启动langchat-ui前端 <a class="header-anchor" href="#启动langchat-ui前端" aria-label="Permalink to &quot;启动langchat-ui前端&quot;">​</a></h3><p>前端基于Node，先安装依赖再启动项目，运行如下命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langchat-ui</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>启动后访问 <code>http://localhost:3003/</code> 跳转到后台系统登录页</p><p><img src="`+c+`" alt="" loading="lazy"></p><h3 id="启动langchat-ui-client前端" tabindex="-1">启动langchat-ui-client前端 <a class="header-anchor" href="#启动langchat-ui-client前端" aria-label="Permalink to &quot;启动langchat-ui-client前端&quot;">​</a></h3><p>前端基于Node，先安装依赖再启动项目，运行如下命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> langchat-ui-client</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>启动后访问 <code>http://localhost:1002/</code> 跳转到客户端系统首页</p><p><img src="`+h+'" alt="" loading="lazy"></p>',37)]))}const C=s(d,[["render",r]]);export{b as __pageData,C as default};
